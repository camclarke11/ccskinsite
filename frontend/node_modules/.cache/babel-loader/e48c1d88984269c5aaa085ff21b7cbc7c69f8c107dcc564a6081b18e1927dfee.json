{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cam\\\\Documents\\\\Coding\\\\CCCSkinSite\\\\ccskinsite\\\\frontend\\\\src\\\\components\\\\PriceChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PriceChecker() {\n  _s();\n  const [weapon, setWeapon] = useState('');\n  const [skin, setSkin] = useState('');\n  const [quality, setQuality] = useState('');\n  const [prices, setPrices] = useState(null);\n  const [currency, setCurrency] = useState('USD');\n  const [exchangeRates, setExchangeRates] = useState({\n    USD: 1,\n    EUR: 0.85,\n    // These should come from a reliable API or backend service\n    GBP: 0.75\n  });\n  const checkPrice = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/get_prices', {\n        weapon,\n        skin,\n        quality\n      });\n      // Assuming the backend responds with the current exchange rates\n      setPrices(response.data.prices);\n      setExchangeRates(response.data.exchangeRates);\n    } catch (error) {\n      console.error('Error fetching prices:', error);\n    }\n  };\n\n  // Function to convert prices according to the selected currency\n  const convertPrice = (price, rate) => {\n    return (parseFloat(price) * rate).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: checkPrice,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: weapon,\n        onChange: e => setWeapon(e.target.value),\n        placeholder: \"Weapon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: skin,\n        onChange: e => setSkin(e.target.value),\n        placeholder: \"Skin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: quality,\n        onChange: e => setQuality(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currency,\n      onChange: e => setCurrency(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USD\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GBP\",\n        children: \"GBP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), prices && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Prices in \", currency, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(prices).map(market => {\n          const price = prices[market];\n          // Check if price is a number and not a message\n          const priceDisplay = !isNaN(price) ? `${convertPrice(price, exchangeRates[currency])} ${currency}` : price;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [market, \": \", priceDisplay]\n          }, market, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(PriceChecker, \"f5EFkyQTr1332gkcI2U5U5Ztss8=\");\n_c = PriceChecker;\nexport default PriceChecker;\nvar _c;\n$RefreshReg$(_c, \"PriceChecker\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PriceChecker","_s","weapon","setWeapon","skin","setSkin","quality","setQuality","prices","setPrices","currency","setCurrency","exchangeRates","setExchangeRates","USD","EUR","GBP","checkPrice","event","preventDefault","response","post","data","error","console","convertPrice","price","rate","parseFloat","toFixed","children","onSubmit","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","market","priceDisplay","isNaN","_c","$RefreshReg$"],"sources":["C:/Users/Cam/Documents/Coding/CCCSkinSite/ccskinsite/frontend/src/components/PriceChecker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PriceChecker() {\r\n  const [weapon, setWeapon] = useState('');\r\n  const [skin, setSkin] = useState('');\r\n  const [quality, setQuality] = useState('');\r\n  const [prices, setPrices] = useState(null);\r\n  const [currency, setCurrency] = useState('USD');\r\n  const [exchangeRates, setExchangeRates] = useState({\r\n    USD: 1,\r\n    EUR: 0.85, // These should come from a reliable API or backend service\r\n    GBP: 0.75,\r\n  });\r\n\r\n  const checkPrice = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/get_prices', {\r\n        weapon,\r\n        skin,\r\n        quality,\r\n      });\r\n      // Assuming the backend responds with the current exchange rates\r\n      setPrices(response.data.prices);\r\n      setExchangeRates(response.data.exchangeRates);\r\n    } catch (error) {\r\n      console.error('Error fetching prices:', error);\r\n    }\r\n  };\r\n\r\n  // Function to convert prices according to the selected currency\r\n  const convertPrice = (price, rate) => {\r\n    return (parseFloat(price) * rate).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={checkPrice}>\r\n        <input\r\n          type=\"text\"\r\n          value={weapon}\r\n          onChange={(e) => setWeapon(e.target.value)}\r\n          placeholder=\"Weapon\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={skin}\r\n          onChange={(e) => setSkin(e.target.value)}\r\n          placeholder=\"Skin\"\r\n        />\r\n        <select value={quality} onChange={(e) => setQuality(e.target.value)}>\r\n          {/* Options for quality */}\r\n        </select>\r\n        <button type=\"submit\">Check Price</button>\r\n      </form>\r\n      <select value={currency} onChange={(e) => setCurrency(e.target.value)}>\r\n        <option value=\"USD\">USD</option>\r\n        <option value=\"EUR\">EUR</option>\r\n        <option value=\"GBP\">GBP</option>\r\n      </select>\r\n      {prices && (\r\n        <div>\r\n          <h3>Prices in {currency}:</h3>\r\n          <ul>\r\n            {Object.keys(prices).map((market) => {\r\n              const price = prices[market];\r\n              // Check if price is a number and not a message\r\n              const priceDisplay = !isNaN(price)\r\n                ? `${convertPrice(price, exchangeRates[currency])} ${currency}`\r\n                : price;\r\n              return <li key={market}>{market}: {priceDisplay}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriceChecker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}